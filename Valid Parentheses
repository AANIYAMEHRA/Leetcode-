Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 

Example 1:

Input: s = "()"

Output: true

Example 2:

Input: s = "()[]{}"

Output: true


CODE //

bool isValid(string str) {
        stack<char> st;

        for(int i=0; i<str.size(); i++){
            if(str[i] == '(' || str[i] == '{' || str[i] == '['){
                st.push(str[i]);
            }else{
                if(st.size() == 0){
                    return false;
                }

                if((st.top() == '(' && str[i] == ')') || (st.top() == '{' && str[i] == '}') || (st.top() == '[' && str[i] == ']') ) {
                    st.pop();
                }else{
                    return false;
                }
            }
        }
        return st.size() == 0;
    }
