Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1.

You must write an algorithm with O(log n) runtime complexity.

 

Example 1:

Input: nums = [-1,0,3,5,9,12], target = 9
Output: 4
Explanation: 9 exists in nums and its index is 4.


Example 2:

Input: nums = [-1,0,3,5,9,12], target = 2
Output: -1
Explanation: 2 does not exist in nums so return -1.


CODE //


class Solution {
public:

    int binSearch(vector<int>& arr, int tar, int st, int end){
        if(st <= end){
            int mid = st + (end-st)/2;

            if(arr[mid] == tar) return mid;
            else if(arr[mid] <= tar){
                return binSearch(arr, tar, mid+1, end);
            }else{
                return binSearch(arr, tar, st, mid-1);
            }
        }

        return -1;
    }

    int search(vector<int>& arr, int tar) {
        return binSearch(arr, tar, 0, arr.size()-1);
    }
};
